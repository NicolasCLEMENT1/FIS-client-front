{"version":3,"sources":["Client.js","NewClient.js","Alert.js","clientApi.js","Clients.js","loginApi.js","Login.js","Logout.js","AuthContext.js","App.js","serviceWorker.js","index.js"],"names":["Client","props","handleEdit","bind","handleDelete","handleCancel","handleChange","handleSave","state","client","isEditing","this","setState","onDelete","prevState","event","username","target","value","onEdit","className","name","onChange","password","firstName","lastName","address","email","phone","onClick","React","Component","NewClient","changeClient","clickAdd","onAddClient","Alert","message","role","data-testid","type","onClose","aria-hidden","ClientApi","token","console","log","Authorization","headers","requestHeaders","request","Request","API_BASE_URL","method","fetch","then","response","json","Clients","newClient","handleErrorClick","errorInfo","selectedClient","clients","fetchClients","prevProps","auth","getAllClients","result","error","pos","findIndex","c","slice","Object","assign","context","find","displayClient","map","key","LoginApi","body","Login","handleLogin","login","onLogin","onSubmit","e","preventDefault","placeholder","Logout","user","onLogout","AuthContext","createContext","jwt","App","handleLogout","Provider","Consumer","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.77c9cdf7.chunk.js","sourcesContent":["import React from 'react';\n\nclass Client extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleEdit = this.handleEdit.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n        this.handleCancel = this.handleCancel.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSave = this.handleSave.bind(this);\n        this.state = {\n            client: props.client,\n            isEditing: false\n        }\n    }\n\n    handleEdit() {\n        this.setState({\n            isEditing: true\n        });\n    }\n\n    handleDelete() {\n        this.props.onDelete(this.state.client);\n    }\n\n    handleCancel() {\n        this.setState((prevState,props) => ({\n            isEditing: false,\n            client: props.client\n        }));\n    }\n\n    handleChange(event) {\n        const username = event.target.username;\n        const value = event.target.value;\n        this.setState((prevState) => ({\n            client: {...prevState.client, [username]: value}\n        }));\n    }\n\n    handleSave() {\n        this.setState({\n            isEditing: false\n        });\n        this.props.onEdit(this.state.client);\n    }\n\n\n\n    render() {\n        let content;\n        if(! this.state.isEditing) {\n            content = \n                <tr>\n                    <td>{this.state.client.username}</td>\n                    <td>{this.state.client.password}</td>\n                    <td>{this.state.client.firstName}</td>\n                    <td>{this.state.client.lastName}</td>\n                    <td>{this.state.client.address}</td>\n                    <td>{this.state.client.email}</td>\n                    <td>{this.state.client.phone}</td>\n                    <td>\n                        <button className=\"btn btn-primary\" onClick={this.handleEdit}>Edit</button>\n                        <button className=\"btn btn-primary\" onClick={this.handleDelete}>Delete</button>\n                    </td>\n                </tr>;\n        } else {\n            content = \n                <tr>\n                    <td><input className=\"form-control\" name=\"username\" value={this.state.client.username} onChange={this.handleChange}/></td>\n                    <td><input className=\"form-control\" name=\"password\" value={this.state.client.password} onChange={this.handleChange}/></td>\n                    <td><input className=\"form-control\" name=\"firstName\" value={this.state.client.firstName} onChange={this.handleChange}/></td>\n                    <td><input className=\"form-control\" name=\"lastName\" value={this.state.client.lastName} onChange={this.handleChange}/></td>\n                    <td><input className=\"form-control\" name=\"address\" value={this.state.client.address} onChange={this.handleChange}/></td>\n                    <td><input className=\"form-control\" name=\"email\" value={this.state.client.email} onChange={this.handleChange}/></td>\n                    <td><input className=\"form-control\" name=\"phone\" value={this.state.client.phone} onChange={this.handleChange}/></td>\n                    <td>\n                        <button className=\"btn btn-primary\" onClick={this.handleSave}>Save</button>\n                        <button className=\"btn btn-primary\" onClick={this.handleCancel}>Cancel</button>\n                    </td>\n                </tr>    \n            ;\n            \n        }\n        return content;\n    }\n}\n\n\nexport default Client;","import React from 'react'\n\nclass NewClient extends React.Component {\n    constructor(props) {\n        super(props);\n        this.changeClient = this.changeClient.bind(this);\n        this.clickAdd = this.clickAdd.bind(this);\n        this.state = {username: '', password:'', firstName: '', lastName: '', address: '', email: '', phone: ''};\n    }\n\n    changeClient(event) {\n        const username = event.target.username;\n        const value = event.target.value;\n        this.setState({\n            [username]: value\n        });\n    }\n\n    clickAdd() {\n        this.props.onAddClient(this.state);\n        this.setState({\n            username: '',\n            password:'', \n            firstName: '', \n            lastName: '', \n            address: '', \n            email: '',\n            phone:''\n        })\n    }\n\n    render() {\n        return(\n            <tr>\n                <td><input className=\"form-control\" name=\"username\" value={this.state.username} onChange={this.changeClient}/></td>\n                <td><input className=\"form-control\" name=\"password\" value={this.state.password} onChange={this.changeClient}/></td>\n                <td><input className=\"form-control\" name=\"firstName\" value={this.state.firstName} onChange={this.changeClient}/></td>\n                <td><input className=\"form-control\" name=\"lastName\" value={this.state.lastName} onChange={this.changeClient}/></td>\n                <td><input className=\"form-control\" name=\"address\" value={this.state.address} onChange={this.changeClient}/></td>\n                <td><input className=\"form-control\" name=\"email\" value={this.state.email} onChange={this.changeClient}/></td>\n                <td><input className=\"form-control\" name=\"phone\" value={this.state.phone} onChange={this.changeClient}/></td>\n                <td><button className=\"btn btn-primary\" onClick={this.clickAdd}>Add Client</button> </td>\n            </tr>   \n        );\n    }\n}\n\nexport default NewClient","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Alert(props) {\n    if (props.message == null) {\n        return null;\n    }\n\n    return (\n        <div className=\"alert alert-warning alert-dismissible\" role=\"alert\">\n            <strong>Error!</strong> {props.message}\n            <button data-testid=\"close\" type=\"button\" className=\"close\" onClick={() => props.onClose()}>\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n        </div>\n    );\n}\n\nAlert.propTypes = {\n    message: PropTypes.string,\n    onClose: PropTypes.func.isRequired\n}\n\nexport default Alert","class ClientApi {\n\n    static API_BASE_URL = \"/api/v1\";\n\n    static requestHeaders(token) {\n        console.log(token);\n        if (token)\n            return {\n                Authorization: `Bearer ${token}`\n            }\n            \n        return {};\n    }\n\n    static getAllClients(token) {\n        const headers = this.requestHeaders(token);\n        const request = new Request(ClientApi.API_BASE_URL + \"/clients\", {\n            method: 'GET',\n            headers: headers\n        });\n\n        return fetch(request).then(response => {\n            return response.json();\n        });\n    }\n\n}\n\nexport default ClientApi","import React from 'react';\nimport Client from './Client.js';\nimport NewClient from './NewClient.js';\nimport Alert from './Alert.js';\nimport ClientApi from './clientApi.js';\n\nclass Clients extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleEdit = this.handleEdit.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n        this.newClient = this.newClient.bind(this);\n        this.handleErrorClick = this.handleErrorClick.bind(this);\n        this.state = {\n            errorInfo: null,\n            selectedClient: null,\n            clients: []\n        };\n    }\n\n    componentDidMount() {\n        this.fetchClients();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.auth !== this.props.auth) {\n            this.fetchClients();\n        }\n    }\n\n    fetchClients() {\n        if (this.props.auth) {\n            ClientApi.getAllClients(this.props.auth.token)\n            .then(\n                (result) => {\n                    this.setState({\n                        clients: result\n                    });\n                },\n                (error) => {\n                    this.setState({\n                        errorInfo: \"Problem with connection\"\n                    })\n                }\n            )    \n        } else {\n            this.setState({\n                clients: []\n            })\n        }\n\n    }\n\n    handleEdit(client) {\n        this.setState(prevState => {\n            const clients = prevState.clients;\n            const pos = clients.findIndex(c => c.username === client.username);\n            return {\n                clients: [...clients.slice(0,pos), Object.assign({}, client), ...clients.slice(pos+1)],\n                selectedClient: this.context.token\n            }\n        })\n    }\n\n    handleErrorClick() {\n        this.setState({\n            errorInfo: null\n        });\n    }\n\n    handleDelete(client) {\n        this.setState(prevState => {\n            const clients = prevState.clients;\n            const pos = clients.findIndex(c => c.username === client.username);\n            return {\n                clients: [...clients.slice(0,pos), ...clients.slice(pos+1)],\n            }\n        });\n    }\n\n    newClient(client) {\n        this.setState(prevState => {\n            const clients = prevState.clients;\n            if (! clients.find(c => c.username === client.username)) {\n                return ({\n                    clients: [...prevState.clients, client]\n                });\n            }\n\n            return {\n                errorInfo: 'Client already exists'\n            };\n        });\n    }\n\n    render() {\n        const selectedClient = this.state.selectedClient;\n        const displayClient = selectedClient ? <div className=\"alert alert-primary\">{selectedClient.username}</div> : ''\n\n        return (\n            <div>\n                <Alert message={this.state.errorInfo} onClose={this.handleErrorClick}/>\n                {displayClient}\n                {this.context ? this.context.token : null}\n\n                <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>Username</th>\n                        <th>Password</th>\n                        <th>First Name</th>\n                        <th>Last Name</th>\n                        <th>Address</th>\n                        <th>Email</th>\n                        <th>Phone</th>\n                        <th>&nbsp;</th>\n                    </tr>\n                </thead>\n                <NewClient onAddClient={this.newClient}/>\n                {this.state.clients.map((client) => \n                    <Client client={client} onDelete={this.handleDelete} onEdit={this.handleEdit} key={client.username} />\n                )}\n                </table>\n            </div>\n        );\n    }\n}\n\n\nexport default Clients","class LoginApi {\n\n    API_BASE_URL = \"/auth\";\n\n    static requestHeaders() {\n        return {};\n    }\n\n    static login(username, password) {\n        const headers = this.requestHeaders();\n        const request = new Request(\"/auth/login\", {\n            method: 'POST',\n            headers: headers,\n            body: {\n                username: username,\n                password: password\n            }\n        });\n\n        return fetch(request).then(response => {\n            return response.json();\n        });\n    }\n\n}\n\nexport default LoginApi","import React from 'react';\nimport LoginApi from './loginApi';\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: ''\n        }\n        this.handleLogin = this.handleLogin.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n\n    handleChange(event) {\n        const username = event.target.username;\n        const value = event.target.value;\n        this.setState({\n            [username]: value\n        });\n    }\n\n    handleLogin() {\n        LoginApi.login(this.state.username, this.state.password).then(result => {\n            this.props.onLogin(result);\n        });\n    }\n\n    render() {\n        return(\n            <form onSubmit={(e) => e.preventDefault()}>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <input className=\"form-control\" name=\"username\" value={this.state.username} onChange={this.handleChange} placeholder=\"User name\"/>\n                    </div>\n                    <div className=\"col\">\n                        <input type=\"password\" className=\"form-control\" name=\"password\" value={this.state.password} onChange={this.handleChange} placeholder=\"Password\"/>\n                    </div>\n                    <div className=\"col\">\n                        <button className=\"btn btn-primary\" onClick={this.handleLogin}>Login</button>\n                    </div>\n                </div>\n            </form>\n        )\n    }\n}\n\nexport default Login;","import React from 'react';\n\nfunction Logout(props) {\n    return(\n        <div>\n            Logged user: {props.user.email}\n            <button className=\"btn btn-primary\" onClick={() => props.onLogout()}>Logout</button>\n        </div>\n    )\n}\n\nexport default Logout;","import React, {useContext} from 'react';\n\n\nexport const AuthContext = React.createContext({\n    user: null,\n    jwt: ''\n});\n\nexport const useAuth = () => useContext(AuthContext);","import React from 'react';\nimport Clients from './Clients.js';\nimport Login from './Login';\nimport Logout from './Logout';\nimport {AuthContext} from './AuthContext';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      auth: null\n    }\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n  handleLogin(login) {\n    console.log(login);\n    this.setState(state => ({\n      auth: login\n    }));\n  }\n\n  handleLogout() {\n    console.log(\"logout\");\n    this.setState(state => ({\n      auth: null\n    }));\n  }\n\n  render() {    \n    return (\n      <div className=\"App\">\n        {this.state.auth ? <Logout user={this.state.auth.user} onLogout={this.handleLogout}/> : \n        <Login onLogin={this.handleLogin}/>}\n        <h1>This is our first client</h1>\n\n        <AuthContext.Provider value={this.state.auth}>\n          <AuthContext.Consumer>\n            {(auth) => \n              <Clients auth={auth}/>\n            }\n          </AuthContext.Consumer>\n        </AuthContext.Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst clients = [\n  {\"username\":\"guillermo\",\"password\":\"$2a$10$fvL/XdJelTcRj4dx7OkbQu6WLKDedRe3kDpCSSxZxEpld6WsLBmGG\",\"firstName\":\"Guillermo\",\"lastName\":\"Rodríguez\",\"address\":\"asdasdasd\",\"email\":\"prueba@prueba.com\",\"phone\":\"654366210\"},\n  {\"username\":\"jkhkjhk\",\"password\":\"$2a$10$8wTNCWJX6RqSnQiFxFRVeOg64FC04Hqm9D71i8EzwGEmC1q5hmWHC\",\"firstName\":\"jkhkjhkjhk\",\"lastName\":\"jhkjhjkh\",\"address\":\"hjkhkj@hjkhkj.com\",\"email\":\"kjhkh@kjhjkash.com\",\"phone\":\"888877772\"},\n  {\"username\":\"guillermo1\",\"password\":\"$2a$10$uQ0f432CvlkCIIzntQTZduegsDgW2SEUteYl2mWk4xuwXyRH//txy\",\"firstName\":\"Guillermo\",\"lastName\":\"Rodríguez\",\"address\":\"asdasdasd\",\"email\":\"prueba1@prueba.com\",\"phone\":\"6543662103\"},\n  {\"username\":\"cllera2\",\"password\":\"$2a$10$tMnW.0I72NIuxzNCXfon9e0CQmwbo.d.l3ezqQLmt4Ig89hYPvkV6\",\"firstName\":\"Guillermo\",\"lastName\":\"Rodríguez\",\"address\":\"asdasdasd\",\"email\":\"prueb33@prueba.com\",\"phone\":\"644432103\"},\n  {\"username\":\"cllera3\",\"password\":\"$2a$10$ewQk/soRUUNWvQSttM0uzuUA1.sojRl0nlp/b2cLh.ADJzePfo8E2\",\"firstName\":\"Guillermo\",\"lastName\":\"Rodríguez\",\"address\":\"asdasdasd\",\"email\":\"pru533@prueba.com\",\"phone\":\"644435103\"},\n  {\"username\":\"cllera4\",\"password\":\"$2a$10$V3EydiBoluy4lQ.erZtj7Ok6NRoo0oCcC5pydobRl2xez2Q.7YPaa\",\"firstName\":\"Guillermo 1\",\"lastName\":\"Rodríguez 2\",\"address\":\"asdasdasd5\",\"email\":\"p2ru533@prueba.com\",\"phone\":\"6444111034\"},\n  {\"username\":\"cllera5\",\"password\":\"$2a$10$an4vBtcge2/RlkNKYyhQyO2lcZolvzXz1lMMP38J/uM3brhOjFg0O\",\"firstName\":\"Guillermo\",\"lastName\":\"Rodríguez\",\"address\":\"asdasdasd\",\"email\":\"p2ru3533@prueba.com\",\"phone\":\"6444113103\"},\n  {\"username\":\"cllera6\",\"password\":\"$2a$10$5n3mM02Bjm7OIJelS/1Qmeo95RkUGpcyhAJugsjoHZd.OkXpU/kOG\",\"firstName\":\"Guillermo\",\"lastName\":\"Rodríguez\",\"address\":\"asdasdasd\",\"email\":\"p2ru35333@prueba.com\",\"phone\":\"64441313103\"}\n  ];\n\nReactDOM.render(<App  clients={clients}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}